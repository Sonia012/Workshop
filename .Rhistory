counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
N <- 1000
counter <- 0
for(i in rnorm(N)){
if(i <= 1 & i >= -1){
counter <- counter + 1
}
}
counter / N
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
#Matrix
#
# <put your code here>
#
free.throws <- rbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT,
DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT,
DwayneWade_FT)
colnames(free.throws) <- Seasons
rownames(free.throws) <- Players
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT,
DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT,
DwayneWade_FT)
#Free Throw Attempts
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
#Matrix
#
# <put your code here>
#
free.throws.attemps <- rbind(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA,
DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA,
DwayneWade_FTA)
free.throws.attemps
colnames(free.throws.attemps) <- Seasons
rownames(free.throws.attemps) <- Players
rm(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA,
DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA,
DwayneWade_FTA)
myplot(free.throws.attemps / Games)
myplot(free.throws / free.throws.attemps)
field.points <- Points - free.throws
myplot(field.points/FieldGoals)
library(ggplot2)
#Seasons
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
#Matrix
#
# <put your code here>
#
free.throws <- rbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT,
DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT,
DwayneWade_FT)
colnames(free.throws) <- Seasons
rownames(free.throws) <- Players
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT,
DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT,
DwayneWade_FT)
#Free Throw Attempts
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
#Matrix
#
# <put your code here>
#
free.throws.attemps <- rbind(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA,
DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA,
DwayneWade_FTA)
free.throws.attemps
colnames(free.throws.attemps) <- Seasons
rownames(free.throws.attemps) <- Players
rm(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA,
DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA,
DwayneWade_FTA)
myplot(free.throws.attemps / Games)
myplot(free.throws / free.throws.attemps)
field.points <- Points - free.throws
myplot(field.points/FieldGoals)
Seasons <- c("2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
#Players
Players <- c("KobeBryant","JoeJohnson","LeBronJames","CarmeloAnthony","DwightHoward","ChrisBosh","ChrisPaul","KevinDurant","DerrickRose","DwayneWade")
#Free Throws
KobeBryant_FT <- c(696,667,623,483,439,483,381,525,18,196)
JoeJohnson_FT <- c(261,235,316,299,220,195,158,132,159,141)
LeBronJames_FT <- c(601,489,549,594,593,503,387,403,439,375)
CarmeloAnthony_FT <- c(573,459,464,371,508,507,295,425,459,189)
DwightHoward_FT <- c(356,390,529,504,483,546,281,355,349,143)
ChrisBosh_FT <- c(474,463,472,504,470,384,229,241,223,179)
ChrisPaul_FT <- c(394,292,332,455,161,337,260,286,295,289)
KevinDurant_FT <- c(209,209,391,452,756,594,431,679,703,146)
DerrickRose_FT <- c(146,146,146,197,259,476,194,0,27,152)
DwayneWade_FT <- c(629,432,354,590,534,494,235,308,189,284)
free.throws <- rbind(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT,
DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT,
DwayneWade_FT)
colnames(free.throws) <- Seasons
rownames(free.throws) <- Players
rm(KobeBryant_FT, JoeJohnson_FT, LeBronJames_FT, CarmeloAnthony_FT,
DwightHoward_FT, ChrisBosh_FT, ChrisPaul_FT, KevinDurant_FT, DerrickRose_FT,
DwayneWade_FT)
KobeBryant_FTA <- c(819,768,742,564,541,583,451,626,21,241)
JoeJohnson_FTA <- c(330,314,379,362,269,243,186,161,195,176)
LeBronJames_FTA <- c(814,701,771,762,773,663,502,535,585,528)
CarmeloAnthony_FTA <- c(709,568,590,468,612,605,367,512,541,237)
DwightHoward_FTA <- c(598,666,897,849,816,916,572,721,638,271)
ChrisBosh_FTA <- c(581,590,559,617,590,471,279,302,272,232)
ChrisPaul_FTA <- c(465,357,390,524,190,384,302,323,345,321)
KevinDurant_FTA <- c(256,256,448,524,840,675,501,750,805,171)
DerrickRose_FTA <- c(205,205,205,250,338,555,239,0,32,187)
DwayneWade_FTA <- c(803,535,467,771,702,652,297,425,258,370)
free.throws.attemps <- rbind(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA,
DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA,
DwayneWade_FTA)
free.throws.attemps
colnames(free.throws.attemps) <- Seasons
rownames(free.throws.attemps) <- Players
rm(KobeBryant_FTA, JoeJohnson_FTA, LeBronJames_FTA, CarmeloAnthony_FTA,
DwightHoward_FTA, ChrisBosh_FTA, ChrisPaul_FTA, KevinDurant_FTA, DerrickRose_FTA,
DwayneWade_FTA)
myplot(free.throws.attemps / Games)
#import data
data <- read.csv(file.choose())
#check/data validation
head(data)
tail(data)
str(data)
summary(data)
#create a data frame with the vectors we have received
mydf <- data.frame(Code = Country_Code, Life_Exp_1960 = Life_Expectancy_At_Birth_1960, Life_Exp_2013 = Life_Expectancy_At_Birth_2013)
head(mydf)
head(data)
summary(mydf)
#split the imported data into 1960 data and 2013 data, 1 data frame per year
data1960 <- data[data$Year == 1960,]
head(data1960)
tail(data1960)
nrow(data1960)
data2013 <- data[data$Year == 2013,]
head(data2013)
tail(data2013)
nrow(data2013)
#merge the data frame of vectors with the imported data frames per year
merged1960 <- merge(data1960, mydf, by.x = "Country.Code", by.y = "Code")
merged1960
#delete the column related to the year 2013
merged1960$Life_Exp_2013 <- NULL
merged1960$Year <- NULL
merged1960
merged2013 <- merge(data2013, mydf, by.x = "Country.Code", by.y = "Code")
merged2013
#delete the column related to the year 1960
merged2013$Life_Exp_1960 <- NULL
merged2013$Year <- NULL
merged2013
#check structure
str(merged1960)
str(merged2013)
#visualization 1960
colnames(merged1960)
qplot(data = merged1960, x = Fertility.Rate, y = Life_Exp_1960,
colour = Region, size = I(3), alpha = I(0.6),
main = "1960 Life Expectancy vs. Fertility Rate per Region")
#visualization 2013
qplot(data = merged2013, x = Fertility.Rate, y = Life_Exp_2013,
colour = Region, size = I(3), alpha = I(0.6),
main = "2013 Life Expectancy vs. Fertility Rate per Region")
#import data
data <- read.csv(file.choose())
head(data)
tail(data)
str(data)
summary(data)
#create a data frame with the vectors we have received
mydf <- data.frame(Code = Country_Code, Life_Exp_1960 = Life_Expectancy_At_Birth_1960, Life_Exp_2013 = Life_Expectancy_At_Birth_2013)
head(mydf)
head(data)
summary(mydf)
#split the imported data into 1960 data and 2013 data, 1 data frame per year
data1960 <- data[data$Year == 1960,]
head(data1960)
tail(data1960)
nrow(data1960)
data2013 <- data[data$Year == 2013,]
head(data2013)
tail(data2013)
nrow(data2013)
#merge the data frame of vectors with the imported data frames per year
merged1960 <- merge(data1960, mydf, by.x = "Country.Code", by.y = "Code")
merged1960
#delete the column related to the year 2013
merged1960$Life_Exp_2013 <- NULL
merged1960$Year <- NULL
merged1960
merged2013 <- merge(data2013, mydf, by.x = "Country.Code", by.y = "Code")
merged2013
#delete the column related to the year 1960
merged2013$Life_Exp_1960 <- NULL
merged2013$Year <- NULL
merged2013
#check structure
str(merged1960)
str(merged2013)
#visualization 1960
colnames(merged1960)
qplot(data = merged1960, x = Fertility.Rate, y = Life_Exp_1960,
colour = Region, size = I(3), alpha = I(0.6),
main = "1960 Life Expectancy vs. Fertility Rate per Region")
#visualization 2013
qplot(data = merged2013, x = Fertility.Rate, y = Life_Exp_2013,
colour = Region, size = I(3), alpha = I(0.6),
main = "2013 Life Expectancy vs. Fertility Rate per Region")
head(data)
tail(data)
str(data)
summary(data)
mydf <- data.frame(Code = Country_Code, Life_Exp_1960 = Life_Expectancy_At_Birth_1960, Life_Exp_2013 = Life_Expectancy_At_Birth_2013)
head(mydf)
head(data)
summary(mydf)
#create a data frame with the vectors we have received
mydf <- data.frame(Code = Country_Code, Life_Exp_1960 = Life_Expectancy_At_Birth_1960, Life_Exp_2013 = Life_Expectancy_At_Birth_2013)
#import data
data <- read.csv(file.choose())
head(data)
tail(data)
str(data)
summary(data)
#create a data frame with the vectors we have received
mydf <- data.frame(Code = Country_Code, Life_Exp_1960 = Life_Expectancy_At_Birth_1960, Life_Exp_2013 = Life_Expectancy_At_Birth_2013)
#create a data frame with the vectors we have received
mydf <- data.frame(Code = Country.Code, Life_Exp_1960 = Life_Expectancy_At_Birth_1960, Life_Exp_2013 = Life_Expectancy_At_Birth_2013)
#Load data
getwd()
setwd("/home/sonia/Desktop/Workshop")
#Load data
getwd()
read.csv("6-Exercice World Trends-Data.csv")
getwd()
data <- read.csv("6-Exercice World Trends-Data.csv")
#Load data
getwd()
data <- read.csv("6-Exercice World Trends-Data.csv")
data
